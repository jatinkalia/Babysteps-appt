{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JATTIN\\\\OneDrive\\\\Desktop\\\\appointment_booking\\\\frontend\\\\src\\\\components\\\\DoctorList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorList = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [selectedDoctor, setSelectedDoctor] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get('http://localhost:5000/doctors').then(response => {\n      setDoctors(response.data);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching doctors:', error);\n      setError('Failed to load doctors. Please try again later.');\n      setLoading(false);\n    });\n  }, []);\n  const handleDoctorChange = e => {\n    setSelectedDoctor(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (selectedDoctor) {\n      navigate(`/book/${selectedDoctor}`);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading doctors...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a Doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedDoctor,\n        onChange: handleDoctorChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select a doctor --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: doctor._id,\n          children: [doctor.name, \" - \", doctor.specialization]\n        }, doctor._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Book Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorList, \"5bduUAyFx3WisRomtEUrOoBhCQg=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorList;\nexport default DoctorList;\nvar _c;\n$RefreshReg$(_c, \"DoctorList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","DoctorList","_s","doctors","setDoctors","selectedDoctor","setSelectedDoctor","loading","setLoading","error","setError","navigate","get","then","response","data","catch","console","handleDoctorChange","e","target","value","handleSubmit","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","map","doctor","_id","name","specialization","type","_c","$RefreshReg$"],"sources":["C:/Users/JATTIN/OneDrive/Desktop/appointment_booking/frontend/src/components/DoctorList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst DoctorList = () => {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [selectedDoctor, setSelectedDoctor] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/doctors')\r\n      .then(response => {\r\n        setDoctors(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching doctors:', error);\r\n        setError('Failed to load doctors. Please try again later.');\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const handleDoctorChange = (e) => {\r\n    setSelectedDoctor(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (selectedDoctor) {\r\n      navigate(`/book/${selectedDoctor}`);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading doctors...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Select a Doctor</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <select \r\n          value={selectedDoctor} \r\n          onChange={handleDoctorChange}\r\n          required\r\n        >\r\n          <option value=\"\">-- Select a doctor --</option>\r\n          {doctors.map(doctor => (\r\n            <option key={doctor._id} value={doctor._id}>\r\n              {doctor.name} - {doctor.specialization}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button type=\"submit\">Book Appointment</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}