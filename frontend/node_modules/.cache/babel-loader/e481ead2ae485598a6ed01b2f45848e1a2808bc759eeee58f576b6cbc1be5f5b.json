{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JATTIN\\\\OneDrive\\\\Desktop\\\\appointment_booking\\\\frontend\\\\src\\\\components\\\\AppointmentBooking.js\",\n  _s = $RefreshSig$();\n// src/components/AppointmentBooking.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { format, addDays } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentBooking = () => {\n  _s();\n  const {\n    doctorId\n  } = useParams();\n  const navigate = useNavigate();\n  const [doctor, setDoctor] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [selectedSlot, setSelectedSlot] = useState('');\n  const [patientName, setPatientName] = useState('');\n  const [appointmentType, setAppointmentType] = useState('');\n  const [notes, setNotes] = useState('');\n  useEffect(() => {\n    axios.get(`http://localhost:5000/doctors/${doctorId}`).then(response => setDoctor(response.data)).catch(error => console.error('Error fetching doctor:', error));\n  }, [doctorId]);\n  useEffect(() => {\n    if (doctor) {\n      axios.get(`http://localhost:5000/doctors/${doctorId}/slots?date=${format(selectedDate, 'yyyy-MM-dd')}`).then(response => setAvailableSlots(response.data)).catch(error => console.error('Error fetching available slots:', error));\n    }\n  }, [doctorId, selectedDate, doctor]);\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    setSelectedSlot('');\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const appointmentData = {\n      doctorId,\n      date: `${format(selectedDate, 'yyyy-MM-dd')}T${selectedSlot}`,\n      duration: 30,\n      appointmentType,\n      patientName,\n      notes\n    };\n    axios.post('http://localhost:5000/appointments', appointmentData).then(response => {\n      alert('Appointment booked successfully!');\n      navigate('/appointments');\n    }).catch(error => console.error('Error booking appointment:', error));\n  };\n  if (!doctor) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Book an Appointment with Dr. \", doctor.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [...Array(7)].map((_, index) => {\n        const date = addDays(new Date(), index);\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDateChange(date),\n          children: format(date, 'MMM d')\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: availableSlots.map(slot => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedSlot(slot),\n        children: slot\n      }, slot, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), selectedSlot && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Patient Name\",\n        value: patientName,\n        onChange: e => setPatientName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Appointment Type\",\n        value: appointmentType,\n        onChange: e => setAppointmentType(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Notes\",\n        value: notes,\n        onChange: e => setNotes(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Book Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentBooking, \"eY0i92OuDKX0h5mkeFaq0VqZ3u8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AppointmentBooking;\nexport default AppointmentBooking;\nvar _c;\n$RefreshReg$(_c, \"AppointmentBooking\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","format","addDays","jsxDEV","_jsxDEV","AppointmentBooking","_s","doctorId","navigate","doctor","setDoctor","selectedDate","setSelectedDate","Date","availableSlots","setAvailableSlots","selectedSlot","setSelectedSlot","patientName","setPatientName","appointmentType","setAppointmentType","notes","setNotes","get","then","response","data","catch","error","console","handleDateChange","date","handleSubmit","e","preventDefault","appointmentData","duration","post","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","name","Array","map","_","index","onClick","slot","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/JATTIN/OneDrive/Desktop/appointment_booking/frontend/src/components/AppointmentBooking.js"],"sourcesContent":["// src/components/AppointmentBooking.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { format, addDays } from 'date-fns';\r\n\r\nconst AppointmentBooking = () => {\r\n  const { doctorId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [doctor, setDoctor] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [availableSlots, setAvailableSlots] = useState([]);\r\n  const [selectedSlot, setSelectedSlot] = useState('');\r\n  const [patientName, setPatientName] = useState('');\r\n  const [appointmentType, setAppointmentType] = useState('');\r\n  const [notes, setNotes] = useState('');\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:5000/doctors/${doctorId}`)\r\n      .then(response => setDoctor(response.data))\r\n      .catch(error => console.error('Error fetching doctor:', error));\r\n  }, [doctorId]);\r\n\r\n  useEffect(() => {\r\n    if (doctor) {\r\n      axios.get(`http://localhost:5000/doctors/${doctorId}/slots?date=${format(selectedDate, 'yyyy-MM-dd')}`)\r\n        .then(response => setAvailableSlots(response.data))\r\n        .catch(error => console.error('Error fetching available slots:', error));\r\n    }\r\n  }, [doctorId, selectedDate, doctor]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    setSelectedSlot('');\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const appointmentData = {\r\n      doctorId,\r\n      date: `${format(selectedDate, 'yyyy-MM-dd')}T${selectedSlot}`,\r\n      duration: 30,\r\n      appointmentType,\r\n      patientName,\r\n      notes,\r\n    };\r\n\r\n    axios.post('http://localhost:5000/appointments', appointmentData)\r\n      .then(response => {\r\n        alert('Appointment booked successfully!');\r\n        navigate('/appointments');\r\n      })\r\n      .catch(error => console.error('Error booking appointment:', error));\r\n  };\r\n\r\n  if (!doctor) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Book an Appointment with Dr. {doctor.name}</h2>\r\n      <div>\r\n        {[...Array(7)].map((_, index) => {\r\n          const date = addDays(new Date(), index);\r\n          return (\r\n            <button key={index} onClick={() => handleDateChange(date)}>\r\n              {format(date, 'MMM d')}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n      <div>\r\n        {availableSlots.map(slot => (\r\n          <button key={slot} onClick={() => setSelectedSlot(slot)}>\r\n            {slot}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {selectedSlot && (\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Patient Name\"\r\n            value={patientName}\r\n            onChange={(e) => setPatientName(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Appointment Type\"\r\n            value={appointmentType}\r\n            onChange={(e) => setAppointmentType(e.target.value)}\r\n            required\r\n          />\r\n          <textarea\r\n            placeholder=\"Notes\"\r\n            value={notes}\r\n            onChange={(e) => setNotes(e.target.value)}\r\n          />\r\n          <button type=\"submit\">Book Appointment</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppointmentBooking;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}